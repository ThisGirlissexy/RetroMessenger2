/****************************************************************************
* RetroMessenger - Serverless & Secure Instant Messenger
* build with wxWidgets gui toolkit based on libretroshare (c++)
*
* Copyright (c) 2008 Ryan Pusztai, Mahendra Panpalia and the RetroMessenger Team
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with this program; if not, write to the Free Software Foundation, Inc.,
* 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
* http://www.gnu.org/licenses/gpl-2.0.html
*
* Please report all praise, requests, bugs and problems to the project
* team & admins: http://sourceforge.net/projects/retromessenger
*
* For the libretroshare library see the updates here:
* http://sourceforge.net/projects/retroshare/
*
* You can find us listed at our projectpage. New team members are welcome.
* Please keep in touch, if you use this code for other projects.
*
* Website:
*	   http://sourceforge.net/projects/retromessenger/
*      http://retromessenger.sf.net
*****************************************************************************/

#ifndef __RetroMessengerMainFrame__
#define __RetroMessengerMainFrame__

/**
@file
Subclass of MainFrame, which is generated by wxFormBuilder.
*/

#include "RetroMessenger_GUI.h"

// STL
#include <vector>

#include <wx/timer.h>

/** Implementing MainFrame */
class RetroMessengerMainFrame : public MainFrame
{
public:
	RetroMessengerMainFrame( wxWindow *parent = NULL, int id = -1 );
	~RetroMessengerMainFrame();
	
	/**	Adds a friend to the main tree.
	 *	@param userName The username to display.
	 *	@param rsid The RetroShare id.
	 *	@param userState The state of the friend to be added. Online = 0, Away = 1, Offline = 2 
	 */ 
	void AddFriend( const std::string& userName, std::string rsid, uint32_t userState = 0 );
	void RestorePosition();
	void SavePosition();
	std::string GetRsId();
	
	//For Status Bar
private:
	 wxTimer m_timer;
	 DECLARE_EVENT_TABLE()
public:
	void OnTimerEvent(wxTimerEvent &event);
	void GetPeerStatus();

private:

	// Handlers for MainFrame events.
	void OnDisplayOwnCert( wxCommandEvent& event );
	void OnCopyOwnCert( wxCommandEvent& event );
	void OnExit( wxCommandEvent& event );
	void OnLogin( wxCommandEvent& event );
	void OnEditCut( wxCommandEvent& event );
	void OnEditCopy( wxCommandEvent& event );
	void OnEditPaste( wxCommandEvent& event );
	void OnAddFriendCertTxt( wxCommandEvent& event );
	void OnAddFriendCertFile( wxCommandEvent& event );
	void OnLinkCloud( wxCommandEvent& event );
	void OnWebSearch( wxCommandEvent& event );
	void OnNetworkStatus( wxCommandEvent& event );
	void OnPreferences( wxCommandEvent& event );
	void OnAbout( wxCommandEvent& event );
};

#endif // __RetroMessengerMainFrame__
